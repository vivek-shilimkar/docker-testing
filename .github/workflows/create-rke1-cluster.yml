name: Create RKE1 Cluster with Node Driver (Terraform)

on:
  workflow_dispatch:
    inputs:
      ami_id:
        description: 'AMI ID to use in EC2'
        required: true
        default: ami-0862be96e41dcbf74
        type: string
      ssh_user:
        description: 'SSH user for the instance'
        required: true
        default: 'ubuntu'
        type: string
      docker_version:
        description: 'Docker version (e.g., 20.10.17)'
        required: true
        default: '28.0.4'
        type: string
      rancher_url:
        description: 'Rancher server URL'
        required: true
        type: string
      rancher_token:
        description: 'Rancher API token'
        required: true
        type: string
      vpc_id:
        description: 'AWS VPC ID'
        required: true
        default: 'vpc-bfccf4d7'
        type: string
      subnet_id:
        description: 'AWS Subnet ID'
        required: true
        default: 'subnet-6127e62d'
        type: string
      security_group:
        description: 'AWS Security Group Name'
        required: true
        default: 'sg-08e8243a8cfbea8a0'
        type: string

jobs:
  deploy:
    name: Create RKE1 Cluster via Rancher Node Driver
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Set AWS Credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
    
    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var="rancher_url=${{ github.event.inputs.rancher_url }}" \
          -var="rancher_token=${{ github.event.inputs.rancher_token }}" \
          -var="ami_id=${{ github.event.inputs.ami_id }}" \
          -var="docker_version=${{ github.event.inputs.docker_version }}" \
          -var="vpc_id=${{ github.event.inputs.vpc_id }}" \
          -var="subnet_id=${{ github.event.inputs.subnet_id }}" \
          -var="security_group=${{ github.event.inputs.security_group }}" \
          -var="AWS_KEY_ID=${{ secrets.AWS_KEY_ID }}" \
          -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
